<?php

namespace AppBundle\Repository;

/**
 * ClubJugadorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClubJugadorRepository extends \Doctrine\ORM\EntityRepository {

	public function getQbAll() {
		$qb = $this->createQueryBuilder( 'cj' );

		return $qb;
	}

	public function getQbByClub( $club ) {
		$qb = $this->createQueryBuilder( 'cj' );

		$qb->where( 'cj.club = :club' );
		$qb->andWhere( 'cj.anio = :anio' );


		$qb->setParameter( 'club', $club );
		$qb->setParameter( 'anio', date( 'Y' ) );


		return $qb;
	}

	public function getCountNuevosFichajes( $club ) {
		$qb = $this->createQueryBuilder( 'cj' );


		$qb->where( 'cj.club = :club' );
		$qb->andWhere( 'cj.anio = :anio' );
		$qb->andWhere( 'cj.confirmado = true' );
//		$qb->andWhere( 'cj.confirmadoClub = false' );
//		$qb->orWhere( 'cj.confirmadoUnion = false' );

		$qb->setParameter( 'club', $club );
		$qb->setParameter( 'anio', date( 'Y' ) );


		return $qb->getQuery()->getResult();
	}

	public function getCountAllNuevosFichajes() {
		$qb = $this->createQueryBuilder( 'cj' );
		$qb->select( 'COUNT(cj.id)' );


		$qb->andWhere( 'cj.anio = :anio' );

		$qb->setParameter( 'anio', date( 'Y' ) );


		return $qb->getQuery()->getSingleScalarResult();
	}

	public function getCountAllJugadores() {
		$qb = $this->createQueryBuilder( 'cj' );
		$qb->select( 'COUNT(cj.id)' );


		$qb->andWhere( 'cj.anio = :anio' );
		$qb->andWhere( 'cj.confirmado = true' );
		$qb->andWhere( 'cj.confirmadoClub = true' );
		$qb->orWhere( 'cj.confirmadoUnion = true' );

		$qb->setParameter( 'anio', date( 'Y' ) );


		return $qb->getQuery()->getSingleScalarResult();
	}

	public function getCountJugadores( $club ) {
		$qb = $this->createQueryBuilder( 'cj' );


		$qb->where( 'cj.club = :club' );
		$qb->andWhere( 'cj.anio = :anio' );
		$qb->andWhere( 'cj.confirmado = true' );
		$qb->andWhere( 'cj.confirmadoClub = true' );
		$qb->andWhere( 'cj.confirmadoUnion = true' );

		$qb->setParameter( 'club', $club );
		$qb->setParameter( 'anio', date( 'Y' ) );


		return $qb->getQuery()->getResult();
	}

	public function getQbByUnion() {
		$qb = $this->createQueryBuilder( 'cj' );

		$qb->select( 'cj.id' );

		$qb->andWhere( 'cj.anio = :anio' );

		$qb
			->andwhere( 'cj.confirmado = true' )
			->andwhere( 'cj.confirmadoClub = true' )
			->andwhere( 'cj.confirmadoUnion = true' );

		$qb2 = $this->createQueryBuilder( 'cj2' );
		$qb2->where(
			$qb2->expr()->notIn( 'cj2.id', $qb->getDQL() )
		);

		$qb2->setParameter( 'anio', date( 'Y' ) );


		return $qb2;
	}
}
